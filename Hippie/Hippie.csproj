<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{12ED0C29-A453-4EBB-B798-BFCD1F182469}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>DIBRIS.Hippie</RootNamespace>
    <AssemblyName>DIBRIS.Hippie</AssemblyName>
    <FileAlignment>512</FileAlignment>
    <ReleaseVersion>0.9.1</ReleaseVersion>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <TargetFrameworkProfile>Profile259</TargetFrameworkProfile>
    <MinimumVisualStudioVersion>10.0</MinimumVisualStudioVersion>
    <CodeContractsAssemblyMode>1</CodeContractsAssemblyMode>
    <RestorePackages>true</RestorePackages>
    <NuGetPackageImportStamp>330263e3</NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>True</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>False</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG;USETHROWER PORTABLE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Debug\DIBRIS.Hippie.xml</DocumentationFile>
    <CodeAnalysisRuleSet>Hippie.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>false</Prefer32Bit>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>False</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>False</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>False</CodeContractsRedundantAssumptions>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestRequires>True</CodeContractsSuggestRequires>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>True</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>Build</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
    <CodeContractsAssertsToContractsCheckBox>True</CodeContractsAssertsToContractsCheckBox>
    <CodeContractsRedundantTests>True</CodeContractsRedundantTests>
    <CodeContractsMissingPublicEnsuresAsWarnings>False</CodeContractsMissingPublicEnsuresAsWarnings>
    <CodeContractsInferEnsuresAutoProperties>True</CodeContractsInferEnsuresAutoProperties>
    <CodeContractsSuggestAssumptionsForCallees>False</CodeContractsSuggestAssumptionsForCallees>
    <CodeContractsNecessaryEnsures>True</CodeContractsNecessaryEnsures>
    <CodeContractsSuggestReadonly>True</CodeContractsSuggestReadonly>
    <CodeContractsSkipAnalysisIfCannotConnectToCache>False</CodeContractsSkipAnalysisIfCannotConnectToCache>
    <CodeContractsBeingOptimisticOnExternal>True</CodeContractsBeingOptimisticOnExternal>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>True</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <RunCodeAnalysis>false</RunCodeAnalysis>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <DefineConstants>TRACE;USETHROWER PORTABLE</DefineConstants>
    <DocumentationFile>bin\Release\DIBRIS.Hippie.xml</DocumentationFile>
    <Prefer32Bit>false</Prefer32Bit>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>False</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>False</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>False</CodeContractsRedundantAssumptions>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestRequires>True</CodeContractsSuggestRequires>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>True</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsRuntimeCheckingLevel>ReleaseRequires</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>Build</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
    <CodeContractsAssertsToContractsCheckBox>True</CodeContractsAssertsToContractsCheckBox>
    <CodeContractsRedundantTests>True</CodeContractsRedundantTests>
    <CodeContractsMissingPublicEnsuresAsWarnings>False</CodeContractsMissingPublicEnsuresAsWarnings>
    <CodeContractsInferEnsuresAutoProperties>True</CodeContractsInferEnsuresAutoProperties>
    <CodeContractsSuggestAssumptionsForCallees>False</CodeContractsSuggestAssumptionsForCallees>
    <CodeContractsNecessaryEnsures>True</CodeContractsNecessaryEnsures>
    <CodeContractsSuggestReadonly>True</CodeContractsSuggestReadonly>
    <CodeContractsSkipAnalysisIfCannotConnectToCache>False</CodeContractsSkipAnalysisIfCannotConnectToCache>
    <CodeContractsBeingOptimisticOnExternal>True</CodeContractsBeingOptimisticOnExternal>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release.Unchecked|AnyCPU'">
    <OutputPath>bin\Release.Unchecked\</OutputPath>
    <Optimize>True</Optimize>
    <DebugType>none</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>Hippie.ruleset</CodeAnalysisRuleSet>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Release.Unchecked\DIBRIS.Hippie.xml</DocumentationFile>
    <Prefer32Bit>false</Prefer32Bit>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>False</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>False</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>False</CodeContractsRedundantAssumptions>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestRequires>True</CodeContractsSuggestRequires>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsRuntimeCheckingLevel>None</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>DoNotBuild</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json">
      <HintPath>..\packages\Newtonsoft.Json.6.0.8\lib\portable-net45+wp80+win8+wpa81+aspnetcore50\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="PommaLabs.ConcurrentWorkQueue">
      <HintPath>..\packages\PommaLabs.ConcurrentWorkQueue.0.9.1\lib\portable-win8+net40+sl5+wp8\PommaLabs.ConcurrentWorkQueue.dll</HintPath>
    </Reference>
    <Reference Include="PommaLabs.GRAMPA">
      <HintPath>..\packages\PommaLabs.GRAMPA.2.1.2\lib\portable-net45+win8+wp8+wpa81\PommaLabs.GRAMPA.dll</HintPath>
    </Reference>
    <Reference Include="Slinky.Unchecked">
      <HintPath>..\packages\Slinky.Unchecked.2.1.0\lib\portable-win8+net45+sl5+wp8\Slinky.Unchecked.dll</HintPath>
    </Reference>
    <Reference Include="System" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Contracts\MultiHeapContract.cs" />
    <Compile Include="Contracts\RawHeapContract.cs" />
    <Compile Include="Contracts\ThinHeapContract.cs" />
    <Compile Include="Contracts\UniqueHeapContract.cs" />
    <Compile Include="Core\ExtensionMethods.cs" />
    <Compile Include="GRAMPA\Collections\Concurrent\ConcurrentDictionary.cs" />
    <Compile Include="GRAMPA\Collections\Concurrent\ConcurrentDoublyLinkedList.cs" />
    <Compile Include="GRAMPA\Collections\Concurrent\ConcurrentHashLinkedList.cs" />
    <Compile Include="GRAMPA\Collections\Concurrent\ConcurrentQueue.cs" />
    <Compile Include="GRAMPA\Collections\Concurrent\ConcurrentSinglyLinkedList.cs" />
    <Compile Include="GRAMPA\Collections\Concurrent\ConcurrentThinLinkedList.cs" />
    <Compile Include="GRAMPA\Collections\Contracts\LinkedListsContracts.cs" />
    <Compile Include="GRAMPA\Collections\Core\LinkedListsBases.cs" />
    <Compile Include="GRAMPA\Collections\Core\LinkedListsNodes.cs" />
    <Compile Include="GRAMPA\Collections\DoublyLinkedList.cs" />
    <Compile Include="GRAMPA\Collections\HashLinkedList.cs" />
    <Compile Include="GRAMPA\Collections\LinkedListsInterfaces.cs" />
    <Compile Include="GRAMPA\Collections\LinkedQueue.cs" />
    <Compile Include="GRAMPA\Collections\LinkedStack.cs" />
    <Compile Include="GRAMPA\Collections\ReadOnly\ReadOnlyDictionary.cs" />
    <Compile Include="GRAMPA\Collections\ReadOnly\ReadOnlyList.cs" />
    <Compile Include="GRAMPA\Collections\SinglyLinkedList.cs" />
    <Compile Include="GRAMPA\Collections\ThinLinkedList.cs" />
    <Compile Include="GRAMPA\Constants.cs" />
    <Compile Include="GRAMPA\Core\ErrorMessages.cs" />
    <Compile Include="GRAMPA\Diagnostics\Raise.cs" />
    <Compile Include="GRAMPA\Environment.cs" />
    <Compile Include="GRAMPA\EquatableObject.cs" />
    <Compile Include="GRAMPA\Extensions\BooleanExtensions.cs" />
    <Compile Include="GRAMPA\Extensions\DataTableExtensions.cs" />
    <Compile Include="GRAMPA\Extensions\DecimalExtensions.cs" />
    <Compile Include="GRAMPA\Extensions\DelegateExtensions.cs" />
    <Compile Include="GRAMPA\Extensions\DoubleExtensions.cs" />
    <Compile Include="GRAMPA\Extensions\EnumerableExtensions.cs" />
    <Compile Include="GRAMPA\Extensions\EventExtensions.cs" />
    <Compile Include="GRAMPA\Extensions\IntegerExtensions.cs" />
    <Compile Include="GRAMPA\Extensions\ObjectExtensions.cs" />
    <Compile Include="GRAMPA\Extensions\StringExtensions.cs" />
    <Compile Include="GRAMPA\FormattableObject.cs" />
    <Compile Include="GRAMPA\PairAndTriple.cs" />
    <Compile Include="GRAMPA\Portability\SerializableAttribute.cs" />
    <Compile Include="GRAMPA\Portability\TypeInfo.cs" />
    <Compile Include="GRAMPA\Reflection\ServiceLocator.cs" />
    <Compile Include="GRAMPA\Testing\RandomDataTableGenerator.cs" />
    <Compile Include="GRAMPA\Text\DiffMatchPatch.cs" />
    <Compile Include="GRAMPA\Text\FastReplacer.cs" />
    <Compile Include="GRAMPA\Threading\ConcurrentWorkQueue.cs" />
    <Compile Include="GRAMPA\Tuples.cs" />
    <Compile Include="GRAMPA\XML\DynamicXml.cs" />
    <Compile Include="StableHeap.cs" />
    <Compile Include="ThinHeap.cs" />
    <Compile Include="IStableHeap.cs" />
    <Compile Include="IThinHeap.cs" />
    <Compile Include="StableHeapFactory.cs" />
    <Compile Include="ArrayHeap.cs" />
    <Compile Include="BinomialHeap.cs" />
    <Compile Include="Core\ErrorMessages.cs" />
    <Compile Include="FibonacciHeap.cs" />
    <Compile Include="Core\ReadOnlyTree.cs" />
    <Compile Include="UniqueHeap.cs" />
    <Compile Include="PairingHeap.cs" />
    <Compile Include="MultiHeap.cs" />
    <Compile Include="Core\TreeHeap.cs" />
    <Compile Include="Core\RawHeap.cs" />
    <Compile Include="IHeap.cs" />
    <Compile Include="HeapFactory.cs" />
    <Compile Include="IReadOnlyTree.cs" />
    <Compile Include="BetterComparer.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <ItemGroup>
    <None Include="Hippie.doxyfile" />
    <None Include="Hippie.ruleset" />
    <None Include="packages.config">
      <SubType>Designer</SubType>
    </None>
  </ItemGroup>
  <PropertyGroup>
    <PostBuildEvent>if not exist "$(SolutionDir)NuGet Packager/lib/portable-net45+win8+wp8+wpa81" mkdir "$(SolutionDir)NuGet Packager/lib/portable-net45+win8+wp8+wpa81"
copy "$(TargetDir)DIBRIS.Hippie.dll" "$(SolutionDir)NuGet Packager/lib/portable-net45+win8+wp8+wpa81"
copy "$(TargetDir)DIBRIS.Hippie.xml" "$(SolutionDir)NuGet Packager/lib/portable-net45+win8+wp8+wpa81"</PostBuildEvent>
  </PropertyGroup>
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
    <Error Condition="!Exists('..\packages\Microsoft.Bcl.Build.1.0.21\build\Microsoft.Bcl.Build.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.Bcl.Build.1.0.21\build\Microsoft.Bcl.Build.targets'))" />
  </Target>
  <Import Project="..\packages\Microsoft.Bcl.Build.1.0.21\build\Microsoft.Bcl.Build.targets" Condition="Exists('..\packages\Microsoft.Bcl.Build.1.0.21\build\Microsoft.Bcl.Build.targets')" />
</Project>